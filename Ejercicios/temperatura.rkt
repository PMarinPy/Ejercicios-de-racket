#lang racket
(define (calcularmenor cont vector num)
  (if (< cont (vector-length vector))
      (if (< (vector-ref vector cont) num)
          (calcularmenor (+ cont 1) vector (vector-ref vector cont))
          (calcularmenor (+ cont 1) vector num))
      num))

(define (calcularmayor cont vector num)
  (if (< cont (vector-length vector))
      (if (> (vector-ref vector cont) num)
          (calcularmayor (+ cont 1) vector (vector-ref vector cont))
          (calcularmayor (+ cont 1) vector num))
      num))

(define (buscar vec cont n)
  (if (< cont (vector-length vec))
      (if (= n (vector-ref vec cont))
          (+ cont 1)
          (buscar vec (+ cont 1) n)
          )
      (display "")))

(define (pedirdatos vector dato maximo indice)
  (if (= indice maximo)
      vector
      (begin
        (printf "Día ~a: " (+ 1 indice))
        (vector-set! vector indice (read))
        (pedirdatos vector dato maximo (+ 1 indice)))))

(define (principal)
  (define vectorm (make-vector 5 0))
  (define may 0)
  (define men 0)
  (define vectormay (make-vector 5 0))
  (display  "Función para calcular temp máximas y mínimas\nDigite las temp mínimas\n")
  (set! vectorm (pedirdatos vectorm 0 5 0))
  (display  "\nDigite las temp máximas")
  (set! vectormay (pedirdatos vectormay 0 5 0))
  (set! may (calcularmayor 0 vectormay (vector-ref vectormay 0)))
  (set! men (calcularmenor 0 vectorm (vector-ref vectorm 0)))
  (printf "El día con menor temperatura es: ~a\n" (buscar vectorm 0 men))
  (printf "El día con mayor temperatura es: ~a\n" (buscar vectormay 0 may))
  (displayln vectorm)
  (displayln vectormay))
(principal)
#lang racket
(require "crear.rkt")
(define (sumar vecf vec1 vec2 cont)
  (if (< cont (vector-length vec1))
      (begin
        (vector-set! vecf cont (+ (vector-ref vec1 cont)(vector-ref vec2 cont)))
        (sumar vecf vec1 vec2 (+ cont 1)))
      vecf))
(define (mostrar)
  (define n 0)
  (define vec1 0)
  (define vec2 0)
  (display "Digite el tamaÃ±o de los vectores: ")
  (set! n (read))
  (set! vec1 (crear n 50))
  (set! vec2 (crear n 50))
  (printf "El vector 1 es el: ~a\nEl 2 es el: ~a\n" vec1 vec2)
  (display "Y la suma de ambos es: ")
  (displayln (sumar (make-vector n 0) vec1 vec2 0)))
(mostrar)